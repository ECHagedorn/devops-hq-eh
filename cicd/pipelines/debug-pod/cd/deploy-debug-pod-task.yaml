# ~/devops-hq-eh/tekton/02-helm-deploy-task.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: helm-deploy
  namespace: tekton-pipelines
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/displayName: "Helm Deploy"
spec:
  workspaces:
    - name: source # This workspace will contain your entire debug-pod project (including the 'charts' folder)
      description: The workspace that contains the source code and Helm chart.
  params:
    - name: chart-relative-path # Path to the Helm chart *relative to the workspace root*
      description: Path to the Helm chart directory relative to the workspace root.
      type: string
      default: charts/debug-pod # Assumes your debug-pod project root is the workspace
    - name: release-name
      description: Name of the Helm release.
      type: string
      default: debug-pod
    - name: target-namespace
      description: Kubernetes namespace to deploy to.
      type: string
      default: devops-hq-eh
    - name: image-url # <-- This is the param the Task defines
      type: string
      description: The full image name and tag for the destination
  steps:
    # - name: install-tools
    #   image: ubuntu:latest # A base image to install necessary tools (kubectl, yq)
    #   script: |
    #     #!/usr/bin/env bash
    #     set -euo pipefail
    #     apt-get update && apt-get install -y curl gnupg wget

    #     # Install kubectl
    #     curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    #     chmod +x kubectl
    #     mv kubectl /usr/local/bin/kubectl

    #     # Install yq
    #     wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
    #     chmod +x /usr/local/bin/yq

    #     # Install helm
    #     curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

    #     echo "Tools installed."

    - name: deploy-helm-chart
      image: alpine/helm:3.14.0 # CHANGED: Using alpine/helm for the core Helm operations
      env:
        - name: KUBECONFIG
          value: /tekton/home/.kube/config # Standard Kubeconfig path for Tekton tasks
      workingDir: $(workspaces.source.path) # Run commands from the root of your source workspace
      script: |
        #!/usr/bin/env bash
        set -xe
        
        # Ensure tools from 'install-tools' step are in PATH
        # Tekton's entrypoint takes care of PATH for subsequent steps if tools are in common /usr/local/bin
        export PATH=$PATH:/usr/local/bin # Explicitly add for safety

        # Ensure the chart path is correct
        CHART_PATH="$(params.chart-relative-path)"
        if [ ! -d "$CHART_PATH" ]; then
          echo "Error: Helm chart directory not found at $CHART_PATH"
          exit 1
        fi

        echo "Deploying Helm chart from: $CHART_PATH"
        echo "Release Name: $(params.release-name)"
        echo "Target Namespace: $(params.target-namespace)"
        echo "Image URL: $(params.image-url)"
        IMAGE_URL=$(echo "$(params.image-url)")

        # Perform Helm upgrade --install
        # --atomic: if upgrade fails, rollback to the previous good state.
        # --wait: waits for all releases to be ready before marking success.
        # --timeout: defines the timeout for the wait.
        # --namespace: specifies the target namespace for the release.
        # --set image.repository=<repo> --set image.tag=<tag>: overrides image in values.yaml
        helm upgrade --install \
          "$(params.release-name)" \
          "$CHART_PATH" \
          --namespace "$(params.target-namespace)" \
          --set image.repository="$(echo "${IMAGE_URL%:*}")" \
          --set image.tag=$(echo "${IMAGE_URL##*:}") \
          --create-namespace \
          --atomic \
          --wait \
          --timeout 5m
