apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-deploy-debug-pod-pipeline
  namespace: tekton-pipelines
spec:
  params: # <--- NEW SECTION: Define parameters for the Git repo URL and revision
    - name: repo-url
      type: string
      description: The Git repository URL to clone
    - name: image-url
      type: string
    - name: repo-revision
      type: string
      description: The Git revision (branch, tag, commit) to clone
      default: master
  workspaces:
    - name: shared-workspace 
  tasks:
    - name: clone-source
      taskRef:
        name: git-clone
      params: 
        - name: url
          value: $(params.repo-url) # Get URL from Pipeline's 'repo-url' param
        - name: revision
          value: $(params.repo-revision) # Get revision from Pipeline's 'repo-revision' param
      workspaces:
        - name: output
          workspace: shared-workspace

    - name: build-debug-pod-image
      taskRef:
        name: build-and-push-debug-pod-image
      runAfter:
        - clone-source
      params:
        - name: DOCKERFILE_PATH
          value: source/services/debug-pod/Dockerfile
        - name: CONTEXT_PATH
          value: .
        - name: image-url
          value: $(params.image-url)
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: deploy-application # NEW TASK ADDED HERE - This uses the helm-deploy task we created
      taskRef:
        kind: Task
        name: helm-deploy # This references the Helm deploy task you created
      runAfter:
        - build-debug-pod-image # This task runs ONLY after the image is successfully built and pushed
      workspaces:
        - name: source
          workspace: shared-workspace # Re-use the cloned repository to access the Helm chart
      params:
        - name: chart-relative-path
          value: /workspace/source/manifests/helm/debug-pod # Path to your Helm chart relative to repo root
        - name: release-name
          value: debug-pod # The name of your Helm release
        - name: target-namespace
          value: devops-hq-eh # The namespace where you want to deploy
        - name: image-url # Pass the exact image URL from the Pipeline's parameter
          value: "$(params.image-url)" # This ensures the deployed image is the one just built

